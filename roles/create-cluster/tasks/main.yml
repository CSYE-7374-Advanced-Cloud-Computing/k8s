---
# tasks file for create-cluster

- name: get avalability zones
  aws_az_info:
    profile: kops
    region: us-east-1
  register: zones

- debug:
    var: zones

- name: making list of all zones
  set_fact:
    node_zone: "{{ zones.availability_zones[3:6] | map(attribute='zone_name')| join(',') }}"
    master_zone: "{{ zones.availability_zones[0:3] | map(attribute='zone_name')| join(',') }}"

# - debug:
#     var: zone

- name: Get the current caller identity information
  aws_caller_info:
  register: caller_info

- debug:
    var: caller_info

- block:
  - name: check if {{ cluster_name }} already exist
    shell: kops get clusters --state {{ state_store }} {{ cluster_name }}
    register: kops_get_clusters
    changed_when: no
    failed_when: no
  rescue:
    - debug:
        msg: 'Cluster is already present'

- name: create cluster
  shell: "kops create cluster \
          --name={{ cluster_name }}
          --bastion={{ bastion }} \
          --cloud aws \
          --dns private \
          --state {{ state_store }}
          --dns-zone={{ dns_zone }} \
          --kubernetes-version {{ kubernetes_version }} \
          --networking={{ kubernetes_networking }} \
          --master-count={{ master_count }} \
          --master-size={{ master_size }} \
          --master-zones={{ master_zone }} \
          --node-count={{ node_count }} \
          --node-size={{ node_size }} \
          --ssh-public-key={{ ssh_key }} \
          --topology private \
          --yes \
          --zones={{ node_zone }}"

- name: Verify all Kubernetes Nodes are ready
  shell: "kops validate cluster --name {{ cluster_name }} --state {{ state_store }}"
  register: cmd_result
  until: cmd_result.stdout.find('Your cluster ' + cluster_name + ' is ready') != -1
  retries: 10
  delay: 75
