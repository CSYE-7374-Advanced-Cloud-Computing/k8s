---
# tasks file for create-vpc-peering

- name: get default vpc info
  ec2_vpc_net_info:
    filters:
      "tag:Name": default
  register: default_vpc

- name: get k8s vpc info
  ec2_vpc_net_info:
    filters:
      "tag:Name": "{{ cluster_name }}"
  register: k8s_vpc

- name: storing vpc ids
  set_fact:
    default_vpc_id: "{{ default_vpc.vpcs | map(attribute='vpc_id') | join(' ')}}"
    k8s_vpc_id: "{{ k8s_vpc.vpcs | map(attribute='vpc_id') | join(' ')}}"
    k8s_vpc_cidr: "{{ k8s_vpc.vpcs | map(attribute='cidr_block') | join(' ')}}"

- name: create vpc peering
  ec2_vpc_peer:
    region: "{{ region }}"
    vpc_id: "{{ default_vpc_id }}"
    peer_vpc_id: "{{ k8s_vpc_id }}"
    state: present
  register: vpc_peer

- name: save peering id
  set_fact:
    peering_id: "{{vpc_peer.peering_id}}"

- name: Accept peering connection
  ec2_vpc_peer:
    region: "{{ region }}"
    peering_id: "{{ peering_id }}"
    state: accept
    tags:
      Name: my_vpc_peering
  register: action_peer

- name: get route table
  ec2_vpc_route_table_info:
    filters:
      "tag:Name": "default-vpc-rt"
    region: "{{region}}"
  register: default_rt

- name: storing deafult route table id
  set_fact:
    rt_id: "{{ default_rt.route_tables | map(attribute='id') | join(' ')}}"

- name: update route table
  ec2_vpc_route_table:
    route_table_id: "{{ rt_id }}"
    purge_routes: false
    purge_subnets: false
    purge_tags: false
    lookup: id
    vpc_id: "{{default_vpc_id}}"
    region: "{{region}}"
    routes:
      - dest: "{{k8s_vpc_cidr}}"
        vpc_peering_connection_id: "{{ peering_id }}"
